/*
 * Speech Services API version 2024-11-15
 * Speech Services API version 2024-11-15.
 *
 * OpenAPI spec version: 2024-11-15
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.43
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BaseModel', 'model/CustomModel', 'model/Error', 'model/ModelCopyAuthorization', 'model/ModelCopyAuthorizationDefinition', 'model/ModelManifest', 'model/ModelUpdate', 'model/Operation', 'model/PaginatedBaseModels', 'model/PaginatedCustomModels', 'model/PaginatedFiles'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/BaseModel'), require('../model/CustomModel'), require('../model/Error'), require('../model/ModelCopyAuthorization'), require('../model/ModelCopyAuthorizationDefinition'), require('../model/ModelManifest'), require('../model/ModelUpdate'), require('../model/Operation'), require('../model/PaginatedBaseModels'), require('../model/PaginatedCustomModels'), require('../model/PaginatedFiles'));
  } else {
    // Browser globals (root is window)
    if (!root.SpeechServicesApiVersion20241115) {
      root.SpeechServicesApiVersion20241115 = {};
    }
    root.SpeechServicesApiVersion20241115.CustomSpeechModelsApi = factory(root.SpeechServicesApiVersion20241115.ApiClient, root.SpeechServicesApiVersion20241115.BaseModel, root.SpeechServicesApiVersion20241115.CustomModel, root.SpeechServicesApiVersion20241115.Error, root.SpeechServicesApiVersion20241115.ModelCopyAuthorization, root.SpeechServicesApiVersion20241115.ModelCopyAuthorizationDefinition, root.SpeechServicesApiVersion20241115.ModelManifest, root.SpeechServicesApiVersion20241115.ModelUpdate, root.SpeechServicesApiVersion20241115.Operation, root.SpeechServicesApiVersion20241115.PaginatedBaseModels, root.SpeechServicesApiVersion20241115.PaginatedCustomModels, root.SpeechServicesApiVersion20241115.PaginatedFiles);
  }
}(this, function(ApiClient, BaseModel, CustomModel, Error, ModelCopyAuthorization, ModelCopyAuthorizationDefinition, ModelManifest, ModelUpdate, Operation, PaginatedBaseModels, PaginatedCustomModels, PaginatedFiles) {
  'use strict';

  /**
   * CustomSpeechModels service.
   * @module api/CustomSpeechModelsApi
   * @version 2024-11-15
   */

  /**
   * Constructs a new CustomSpeechModelsApi. 
   * @alias module:api/CustomSpeechModelsApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the modelsAuthorizeCopy operation.
     * @callback module:api/CustomSpeechModelsApi~modelsAuthorizeCopyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelCopyAuthorization} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Allows another speech resource (source) to copy a model to this speech resource (target).
     * This method can be used to allow copying a model from another speech resource.  Only custom models can be copied from another speech resource.
     * @param {String} apiVersion The requested api version.
     * @param {module:model/ModelCopyAuthorizationDefinition} modelCopyAuthorizationDefinition The body contains the Azure Resource ID of the source speech resource.
     * @param {module:api/CustomSpeechModelsApi~modelsAuthorizeCopyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelCopyAuthorization}
     */
    this.modelsAuthorizeCopy = function(apiVersion, modelCopyAuthorizationDefinition, callback) {
      var postBody = modelCopyAuthorizationDefinition;

      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling modelsAuthorizeCopy");
      }

      // verify the required parameter 'modelCopyAuthorizationDefinition' is set
      if (modelCopyAuthorizationDefinition === undefined || modelCopyAuthorizationDefinition === null) {
        throw new Error("Missing the required parameter 'modelCopyAuthorizationDefinition' when calling modelsAuthorizeCopy");
      }


      var pathParams = {
      };
      var queryParams = {
        'api-version': apiVersion,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ModelCopyAuthorization;

      return this.apiClient.callApi(
        '/models:authorizecopy', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the modelsCopy operation.
     * @callback module:api/CustomSpeechModelsApi~modelsCopyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Operation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Copies a model from one subscription to another.
     * This method can be used to copy a model from this speech resource to a target one.  The authorization is obtained on the target speech resource.  Only custom models can be copied to another speech resource.
     * @param {String} id The identifier of the model that will be copied.
     * @param {String} apiVersion The requested api version.
     * @param {module:model/ModelCopyAuthorization} modelCopyAuthorization The body contains the authorization to copy to the target speech resource.
     * @param {module:api/CustomSpeechModelsApi~modelsCopyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Operation}
     */
    this.modelsCopy = function(id, apiVersion, modelCopyAuthorization, callback) {
      var postBody = modelCopyAuthorization;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling modelsCopy");
      }

      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling modelsCopy");
      }

      // verify the required parameter 'modelCopyAuthorization' is set
      if (modelCopyAuthorization === undefined || modelCopyAuthorization === null) {
        throw new Error("Missing the required parameter 'modelCopyAuthorization' when calling modelsCopy");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
        'api-version': apiVersion,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Operation;

      return this.apiClient.callApi(
        '/models/{id}:copy', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the modelsCreate operation.
     * @callback module:api/CustomSpeechModelsApi~modelsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new model.
     * @param {String} apiVersion The requested api version.
     * @param {module:model/CustomModel} model The details of the new model.
     * @param {module:api/CustomSpeechModelsApi~modelsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomModel}
     */
    this.modelsCreate = function(apiVersion, model, callback) {
      var postBody = model;

      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling modelsCreate");
      }

      // verify the required parameter 'model' is set
      if (model === undefined || model === null) {
        throw new Error("Missing the required parameter 'model' when calling modelsCreate");
      }


      var pathParams = {
      };
      var queryParams = {
        'api-version': apiVersion,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = CustomModel;

      return this.apiClient.callApi(
        '/models', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the modelsDelete operation.
     * @callback module:api/CustomSpeechModelsApi~modelsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the model identified by the given ID.
     * @param {String} id The identifier of the model.
     * @param {String} apiVersion The requested api version.
     * @param {module:api/CustomSpeechModelsApi~modelsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.modelsDelete = function(id, apiVersion, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling modelsDelete");
      }

      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling modelsDelete");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
        'api-version': apiVersion,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/models/{id}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the modelsGetBaseModel operation.
     * @callback module:api/CustomSpeechModelsApi~modelsGetBaseModelCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BaseModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the base model identified by the given ID.
     * @param {String} id The identifier of the base model.
     * @param {String} apiVersion The requested api version.
     * @param {module:api/CustomSpeechModelsApi~modelsGetBaseModelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BaseModel}
     */
    this.modelsGetBaseModel = function(id, apiVersion, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling modelsGetBaseModel");
      }

      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling modelsGetBaseModel");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
        'api-version': apiVersion,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = BaseModel;

      return this.apiClient.callApi(
        '/models/base/{id}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the modelsGetBaseModelManifest operation.
     * @callback module:api/CustomSpeechModelsApi~modelsGetBaseModelManifestCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelManifest} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns an manifest for this base model which can be used in an on-premise container.
     * @param {String} id The ID of the model to generate a manifest for.
     * @param {Number} sasLifetimeMinutes The duration in minutes that an SAS url should be valid.
     * @param {String} apiVersion The requested api version.
     * @param {module:api/CustomSpeechModelsApi~modelsGetBaseModelManifestCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelManifest}
     */
    this.modelsGetBaseModelManifest = function(id, sasLifetimeMinutes, apiVersion, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling modelsGetBaseModelManifest");
      }

      // verify the required parameter 'sasLifetimeMinutes' is set
      if (sasLifetimeMinutes === undefined || sasLifetimeMinutes === null) {
        throw new Error("Missing the required parameter 'sasLifetimeMinutes' when calling modelsGetBaseModelManifest");
      }

      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling modelsGetBaseModelManifest");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
        'sasLifetimeMinutes': sasLifetimeMinutes,
        'api-version': apiVersion,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = ModelManifest;

      return this.apiClient.callApi(
        '/models/base/{id}/manifest', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the modelsGetCustomModel operation.
     * @callback module:api/CustomSpeechModelsApi~modelsGetCustomModelCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the model identified by the given ID.
     * @param {String} id The identifier of the model.
     * @param {String} apiVersion The requested api version.
     * @param {module:api/CustomSpeechModelsApi~modelsGetCustomModelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomModel}
     */
    this.modelsGetCustomModel = function(id, apiVersion, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling modelsGetCustomModel");
      }

      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling modelsGetCustomModel");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
        'api-version': apiVersion,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = CustomModel;

      return this.apiClient.callApi(
        '/models/{id}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the modelsGetCustomModelManifest operation.
     * @callback module:api/CustomSpeechModelsApi~modelsGetCustomModelManifestCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelManifest} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns an manifest for this model which can be used in an on-premise container.
     * @param {String} id The ID of the model to generate a manifest for.
     * @param {Number} sasLifetimeMinutes The duration in minutes that an SAS url should be valid.
     * @param {String} apiVersion The requested api version.
     * @param {module:api/CustomSpeechModelsApi~modelsGetCustomModelManifestCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelManifest}
     */
    this.modelsGetCustomModelManifest = function(id, sasLifetimeMinutes, apiVersion, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling modelsGetCustomModelManifest");
      }

      // verify the required parameter 'sasLifetimeMinutes' is set
      if (sasLifetimeMinutes === undefined || sasLifetimeMinutes === null) {
        throw new Error("Missing the required parameter 'sasLifetimeMinutes' when calling modelsGetCustomModelManifest");
      }

      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling modelsGetCustomModelManifest");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
        'sasLifetimeMinutes': sasLifetimeMinutes,
        'api-version': apiVersion,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = ModelManifest;

      return this.apiClient.callApi(
        '/models/{id}/manifest', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the modelsGetFile operation.
     * @callback module:api/CustomSpeechModelsApi~modelsGetFileCallback
     * @param {String} error Error message, if any.
     * @param {File} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets one specific file (identified with fileId) from a model (identified with id).
     * @param {String} id The identifier of the model.
     * @param {String} fileId The identifier of the file.
     * @param {String} apiVersion The requested api version.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.sasLifetimeMinutes This parameter defines the duration in minutes for which an SAS url should be valid.              The parameter can only be used for operations on speech resources that don't have BYOS enabled. For speech resources              that don't have BYOS enabled, the default SAS validity duration is 12 hours.              For speech resources with BYOS, returned urls do not contain an SAS token.
     * @param {module:api/CustomSpeechModelsApi~modelsGetFileCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link File}
     */
    this.modelsGetFile = function(id, fileId, apiVersion, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling modelsGetFile");
      }

      // verify the required parameter 'fileId' is set
      if (fileId === undefined || fileId === null) {
        throw new Error("Missing the required parameter 'fileId' when calling modelsGetFile");
      }

      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling modelsGetFile");
      }


      var pathParams = {
        'id': id,
        'fileId': fileId
      };
      var queryParams = {
        'sasLifetimeMinutes': opts['sasLifetimeMinutes'],
        'api-version': apiVersion,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = File;

      return this.apiClient.callApi(
        '/models/{id}/files/{fileId}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the modelsListBaseModels operation.
     * @callback module:api/CustomSpeechModelsApi~modelsListBaseModelsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaginatedBaseModels} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the list of base models for the authenticated subscription.
     * @param {String} apiVersion The requested api version.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.skip Number of datasets that will be skipped.
     * @param {Number} opts.top Number of datasets that will be included after skipping.
     * @param {String} opts.filter A filtering expression for selecting a subset of the available base models.              - Supported properties: displayName, description, createdDateTime, lastActionDateTime, status, locale.              - Operators:                - eq, ne are supported for all properties.                - gt, ge, lt, le are supported for createdDateTime and lastActionDateTime.                - and, or, not are supported.              - Example:                filter=status eq 'NotStarted' or status eq 'Running'
     * @param {module:api/CustomSpeechModelsApi~modelsListBaseModelsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaginatedBaseModels}
     */
    this.modelsListBaseModels = function(apiVersion, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling modelsListBaseModels");
      }


      var pathParams = {
      };
      var queryParams = {
        'skip': opts['skip'],
        'top': opts['top'],
        'filter': opts['filter'],
        'api-version': apiVersion,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = PaginatedBaseModels;

      return this.apiClient.callApi(
        '/models/base', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the modelsListCustomModels operation.
     * @callback module:api/CustomSpeechModelsApi~modelsListCustomModelsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaginatedCustomModels} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the list of custom models for the authenticated subscription.
     * @param {String} apiVersion The requested api version.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.skip Number of datasets that will be skipped.
     * @param {Number} opts.top Number of datasets that will be included after skipping.
     * @param {String} opts.filter A filtering expression for selecting a subset of the available models.              - Supported properties: displayName, description, createdDateTime, lastActionDateTime, status, locale.              - Operators:                - eq, ne are supported for all properties.                - gt, ge, lt, le are supported for createdDateTime and lastActionDateTime.                - and, or, not are supported.              - Example:                filter=status eq 'NotStarted' or status eq 'Running'
     * @param {module:api/CustomSpeechModelsApi~modelsListCustomModelsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaginatedCustomModels}
     */
    this.modelsListCustomModels = function(apiVersion, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling modelsListCustomModels");
      }


      var pathParams = {
      };
      var queryParams = {
        'skip': opts['skip'],
        'top': opts['top'],
        'filter': opts['filter'],
        'api-version': apiVersion,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = PaginatedCustomModels;

      return this.apiClient.callApi(
        '/models', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the modelsListFiles operation.
     * @callback module:api/CustomSpeechModelsApi~modelsListFilesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaginatedFiles} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the files of the model identified by the given ID.
     * @param {String} id The identifier of the model.
     * @param {String} apiVersion The requested api version.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.sasLifetimeMinutes This parameter defines the duration in minutes for which an SAS url should be valid.              The parameter can only be used for operations on speech resources that don't have BYOS enabled. For speech resources              that don't have BYOS enabled, the default SAS validity duration is 12 hours.              For speech resources with BYOS, returned urls do not contain an SAS token.
     * @param {Number} opts.skip Number of datasets that will be skipped.
     * @param {Number} opts.top Number of datasets that will be included after skipping.
     * @param {String} opts.filter A filtering expression for selecting a subset of the available files.              - Supported properties: name, createdDateTime, kind.              - Operators:                - eq, ne are supported for all properties.                - gt, ge, lt, le are supported for createdDateTime.                - and, or, not are supported.              - Example:                filter=name eq 'myaudio.wav' and kind eq 'Audio'
     * @param {module:api/CustomSpeechModelsApi~modelsListFilesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaginatedFiles}
     */
    this.modelsListFiles = function(id, apiVersion, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling modelsListFiles");
      }

      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling modelsListFiles");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
        'sasLifetimeMinutes': opts['sasLifetimeMinutes'],
        'skip': opts['skip'],
        'top': opts['top'],
        'filter': opts['filter'],
        'api-version': apiVersion,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = PaginatedFiles;

      return this.apiClient.callApi(
        '/models/{id}/files', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the modelsListSupportedLocales operation.
     * @callback module:api/CustomSpeechModelsApi~modelsListSupportedLocalesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<'String'>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a list of supported locales for model adaptation.
     * @param {String} apiVersion The requested api version.
     * @param {module:api/CustomSpeechModelsApi~modelsListSupportedLocalesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<'String'>}
     */
    this.modelsListSupportedLocales = function(apiVersion, callback) {
      var postBody = null;

      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling modelsListSupportedLocales");
      }


      var pathParams = {
      };
      var queryParams = {
        'api-version': apiVersion,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = ['String'];

      return this.apiClient.callApi(
        '/models/locales', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the modelsUpdate operation.
     * @callback module:api/CustomSpeechModelsApi~modelsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the metadata of the model identified by the given ID.
     * @param {String} id The identifier of the model.
     * @param {String} apiVersion The requested api version.
     * @param {module:model/ModelUpdate} modelUpdate The updated values for the model.
     * @param {module:api/CustomSpeechModelsApi~modelsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomModel}
     */
    this.modelsUpdate = function(id, apiVersion, modelUpdate, callback) {
      var postBody = modelUpdate;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling modelsUpdate");
      }

      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling modelsUpdate");
      }

      // verify the required parameter 'modelUpdate' is set
      if (modelUpdate === undefined || modelUpdate === null) {
        throw new Error("Missing the required parameter 'modelUpdate' when calling modelsUpdate");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
        'api-version': apiVersion,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json', 'application/merge-patch+json'];
      var accepts = ['application/json'];
      var returnType = CustomModel;

      return this.apiClient.callApi(
        '/models/{id}', 'PATCH',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
