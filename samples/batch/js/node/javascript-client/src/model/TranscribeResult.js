/*
 * Speech Services API version 2024-11-15
 * Speech Services API version 2024-11-15.
 *
 * OpenAPI spec version: 2024-11-15
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.43
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ChannelCombinedPhrases', 'model/Phrase'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ChannelCombinedPhrases'), require('./Phrase'));
  } else {
    // Browser globals (root is window)
    if (!root.SpeechServicesApiVersion20241115) {
      root.SpeechServicesApiVersion20241115 = {};
    }
    root.SpeechServicesApiVersion20241115.TranscribeResult = factory(root.SpeechServicesApiVersion20241115.ApiClient, root.SpeechServicesApiVersion20241115.ChannelCombinedPhrases, root.SpeechServicesApiVersion20241115.Phrase);
  }
}(this, function(ApiClient, ChannelCombinedPhrases, Phrase) {
  'use strict';

  /**
   * The TranscribeResult model module.
   * @module model/TranscribeResult
   * @version 2024-11-15
   */

  /**
   * Constructs a new <code>TranscribeResult</code>.
   * The result of the transcribe operation.
   * @alias module:model/TranscribeResult
   * @class
   * @param durationMilliseconds {Number} The duration of the audio in milliseconds.
   * @param combinedPhrases {Array.<module:model/ChannelCombinedPhrases>} The full transcript for each channel.
   * @param phrases {Array.<module:model/Phrase>} The transcription results segmented into phrases.
   */
  var exports = function(durationMilliseconds, combinedPhrases, phrases) {
    this.durationMilliseconds = durationMilliseconds;
    this.combinedPhrases = combinedPhrases;
    this.phrases = phrases;
  };

  /**
   * Constructs a <code>TranscribeResult</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TranscribeResult} obj Optional instance to populate.
   * @return {module:model/TranscribeResult} The populated <code>TranscribeResult</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('durationMilliseconds'))
        obj.durationMilliseconds = ApiClient.convertToType(data['durationMilliseconds'], 'Number');
      if (data.hasOwnProperty('combinedPhrases'))
        obj.combinedPhrases = ApiClient.convertToType(data['combinedPhrases'], [ChannelCombinedPhrases]);
      if (data.hasOwnProperty('phrases'))
        obj.phrases = ApiClient.convertToType(data['phrases'], [Phrase]);
    }
    return obj;
  }

  /**
   * The duration of the audio in milliseconds.
   * @member {Number} durationMilliseconds
   */
  exports.prototype.durationMilliseconds = undefined;

  /**
   * The full transcript for each channel.
   * @member {Array.<module:model/ChannelCombinedPhrases>} combinedPhrases
   */
  exports.prototype.combinedPhrases = undefined;

  /**
   * The transcription results segmented into phrases.
   * @member {Array.<module:model/Phrase>} phrases
   */
  exports.prototype.phrases = undefined;


  return exports;

}));
