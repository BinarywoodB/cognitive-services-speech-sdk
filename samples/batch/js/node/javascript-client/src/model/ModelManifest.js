/*
 * Speech Services API version 2024-11-15
 * Speech Services API version 2024-11-15.
 *
 * OpenAPI spec version: 2024-11-15
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.43
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/EntityReference', 'model/ModelFile'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./EntityReference'), require('./ModelFile'));
  } else {
    // Browser globals (root is window)
    if (!root.SpeechServicesApiVersion20241115) {
      root.SpeechServicesApiVersion20241115 = {};
    }
    root.SpeechServicesApiVersion20241115.ModelManifest = factory(root.SpeechServicesApiVersion20241115.ApiClient, root.SpeechServicesApiVersion20241115.EntityReference, root.SpeechServicesApiVersion20241115.ModelFile);
  }
}(this, function(ApiClient, EntityReference, ModelFile) {
  'use strict';

  /**
   * The ModelManifest model module.
   * @module model/ModelManifest
   * @version 2024-11-15
   */

  /**
   * Constructs a new <code>ModelManifest</code>.
   * @alias module:model/ModelManifest
   * @class
   * @param model {module:model/EntityReference} 
   * @param modelFiles {Array.<module:model/ModelFile>} The model files of this model.
   * @param properties {Object.<String, Object>} The configuration for running this model in a container.
   */
  var exports = function(model, modelFiles, properties) {
    this.model = model;
    this.modelFiles = modelFiles;
    this.properties = properties;
  };

  /**
   * Constructs a <code>ModelManifest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ModelManifest} obj Optional instance to populate.
   * @return {module:model/ModelManifest} The populated <code>ModelManifest</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('model'))
        obj.model = EntityReference.constructFromObject(data['model']);
      if (data.hasOwnProperty('modelFiles'))
        obj.modelFiles = ApiClient.convertToType(data['modelFiles'], [ModelFile]);
      if (data.hasOwnProperty('properties'))
        obj.properties = ApiClient.convertToType(data['properties'], {'String': Object});
    }
    return obj;
  }

  /**
   * @member {module:model/EntityReference} model
   */
  exports.prototype.model = undefined;

  /**
   * The model files of this model.
   * @member {Array.<module:model/ModelFile>} modelFiles
   */
  exports.prototype.modelFiles = undefined;

  /**
   * The configuration for running this model in a container.
   * @member {Object.<String, Object>} properties
   */
  exports.prototype.properties = undefined;


  return exports;

}));
