/*
 * Speech Services API version 2024-11-15
 * Speech Services API version 2024-11-15.
 *
 * OpenAPI spec version: 2024-11-15
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.43
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ProfanityFilterMode', 'model/TranscribeDiarizationProperties'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ProfanityFilterMode'), require('./TranscribeDiarizationProperties'));
  } else {
    // Browser globals (root is window)
    if (!root.SpeechServicesApiVersion20241115) {
      root.SpeechServicesApiVersion20241115 = {};
    }
    root.SpeechServicesApiVersion20241115.TranscribeDefinition = factory(root.SpeechServicesApiVersion20241115.ApiClient, root.SpeechServicesApiVersion20241115.ProfanityFilterMode, root.SpeechServicesApiVersion20241115.TranscribeDiarizationProperties);
  }
}(this, function(ApiClient, ProfanityFilterMode, TranscribeDiarizationProperties) {
  'use strict';

  /**
   * The TranscribeDefinition model module.
   * @module model/TranscribeDefinition
   * @version 2024-11-15
   */

  /**
   * Constructs a new <code>TranscribeDefinition</code>.
   * Metadata for a transcription request.
   * @alias module:model/TranscribeDefinition
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>TranscribeDefinition</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TranscribeDefinition} obj Optional instance to populate.
   * @return {module:model/TranscribeDefinition} The populated <code>TranscribeDefinition</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('locales'))
        obj.locales = ApiClient.convertToType(data['locales'], ['String']);
      if (data.hasOwnProperty('models'))
        obj.models = ApiClient.convertToType(data['models'], {'String': 'String'});
      if (data.hasOwnProperty('profanityFilterMode'))
        obj.profanityFilterMode = ProfanityFilterMode.constructFromObject(data['profanityFilterMode']);
      if (data.hasOwnProperty('diarization'))
        obj.diarization = TranscribeDiarizationProperties.constructFromObject(data['diarization']);
      if (data.hasOwnProperty('channels'))
        obj.channels = ApiClient.convertToType(data['channels'], ['Number']);
    }
    return obj;
  }

  /**
   * A list of possible locales for the transcription. If not specified, the locale of the speech in the audio is detected automatically from all supported locales.
   * @member {Array.<String>} locales
   */
  exports.prototype.locales = undefined;

  /**
   * Maps some or all candidate locales to a model URI to be used for transcription. If no mapping is given, the default model for the locale is used.
   * @member {Object.<String, String>} models
   */
  exports.prototype.models = undefined;

  /**
   * @member {module:model/ProfanityFilterMode} profanityFilterMode
   */
  exports.prototype.profanityFilterMode = undefined;

  /**
   * @member {module:model/TranscribeDiarizationProperties} diarization
   */
  exports.prototype.diarization = undefined;

  /**
   * The 0-based indices of the channels to be transcribed separately. If not specified, multiple channels are merged and transcribed jointly. Only up to two channels are supported.
   * @member {Array.<Number>} channels
   */
  exports.prototype.channels = undefined;


  return exports;

}));
