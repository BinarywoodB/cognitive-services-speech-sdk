/*
 * Speech Services API version 2024-11-15
 * Speech Services API version 2024-11-15.
 *
 * OpenAPI spec version: 2024-11-15
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.43
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SpeechServicesApiVersion20241115);
  }
}(this, function(expect, SpeechServicesApiVersion20241115) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SpeechServicesApiVersion20241115.CustomSpeechOperationsApi();
  });

  describe('(package)', function() {
    describe('CustomSpeechOperationsApi', function() {
      describe('operationsGetModelCopy', function() {
        it('should call operationsGetModelCopy successfully', function(done) {
          // TODO: uncomment, update parameter values for operationsGetModelCopy call and complete the assertions
          /*
          var id = "id_example";
          var apiVersion = "apiVersion_example";

          instance.operationsGetModelCopy(id, apiVersion, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SpeechServicesApiVersion20241115.Operation);
            expect(data.id).to.be.a('string');
            expect(data.id).to.be("""00000000-0000-0000-0000-000000000000");
            expect(data.self).to.be.a('string');
            expect(data.self).to.be("");
            expect(data.createdDateTime).to.be.a(Date);
            expect(data.createdDateTime).to.be(new Date());
            expect(data.lastActionDateTime).to.be.a(Date);
            expect(data.lastActionDateTime).to.be(new Date());
            expect(data.status).to.be.a(SpeechServicesApiVersion20241115.Status);
                expect(data.result).to.be.a(SpeechServicesApiVersion20241115.OperationResult);
                  expect(data.result.link).to.be.a('string');
              expect(data.result.link).to.be("");
            expect(data.error).to.be.a(SpeechServicesApiVersion20241115.EntityError);
                  expect(data.error.code).to.be.a('string');
              expect(data.error.code).to.be("");
              expect(data.error.message).to.be.a('string');
              expect(data.error.message).to.be("");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
