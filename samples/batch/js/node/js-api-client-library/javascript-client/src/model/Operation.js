/*
 * Speech Services API version 2024-11-15
 * Speech Services API version 2024-11-15.
 *
 * OpenAPI spec version: 2024-11-15
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.43
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/EntityError', 'model/OperationResult', 'model/Status'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./EntityError'), require('./OperationResult'), require('./Status'));
  } else {
    // Browser globals (root is window)
    if (!root.SpeechServicesApiVersion20241115) {
      root.SpeechServicesApiVersion20241115 = {};
    }
    root.SpeechServicesApiVersion20241115.Operation = factory(root.SpeechServicesApiVersion20241115.ApiClient, root.SpeechServicesApiVersion20241115.EntityError, root.SpeechServicesApiVersion20241115.OperationResult, root.SpeechServicesApiVersion20241115.Status);
  }
}(this, function(ApiClient, EntityError, OperationResult, Status) {
  'use strict';

  /**
   * The Operation model module.
   * @module model/Operation
   * @version 2024-11-15
   */

  /**
   * Constructs a new <code>Operation</code>.
   * @alias module:model/Operation
   * @class
   * @param id {String} The identifier of this Operation.
   */
  var exports = function(id) {
    this.id = id;
  };

  /**
   * Constructs a <code>Operation</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Operation} obj Optional instance to populate.
   * @return {module:model/Operation} The populated <code>Operation</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('self'))
        obj.self = ApiClient.convertToType(data['self'], 'String');
      if (data.hasOwnProperty('createdDateTime'))
        obj.createdDateTime = ApiClient.convertToType(data['createdDateTime'], 'Date');
      if (data.hasOwnProperty('lastActionDateTime'))
        obj.lastActionDateTime = ApiClient.convertToType(data['lastActionDateTime'], 'Date');
      if (data.hasOwnProperty('status'))
        obj.status = Status.constructFromObject(data['status']);
      if (data.hasOwnProperty('result'))
        obj.result = OperationResult.constructFromObject(data['result']);
      if (data.hasOwnProperty('error'))
        obj.error = EntityError.constructFromObject(data['error']);
    }
    return obj;
  }

  /**
   * The identifier of this Operation.
   * @member {String} id
   */
  exports.prototype.id = undefined;

  /**
   * The location of this entity.
   * @member {String} self
   */
  exports.prototype.self = undefined;

  /**
   * The time-stamp when the object was created. The time stamp is encoded as ISO 8601 date and time format (\"YYYY-MM-DDThh:mm:ssZ\", see https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations).
   * @member {Date} createdDateTime
   */
  exports.prototype.createdDateTime = undefined;

  /**
   * The time-stamp when the current status was entered. The time stamp is encoded as ISO 8601 date and time format (\"YYYY-MM-DDThh:mm:ssZ\", see https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations).
   * @member {Date} lastActionDateTime
   */
  exports.prototype.lastActionDateTime = undefined;

  /**
   * @member {module:model/Status} status
   */
  exports.prototype.status = undefined;

  /**
   * @member {module:model/OperationResult} result
   */
  exports.prototype.result = undefined;

  /**
   * @member {module:model/EntityError} error
   */
  exports.prototype.error = undefined;


  return exports;

}));
