/*
 * Speech Services API version 2024-11-15
 * Speech Services API version 2024-11-15.
 *
 * OpenAPI spec version: 2024-11-15
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.43
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/DiarizationProperties', 'model/EntityError', 'model/LanguageIdentificationProperties', 'model/ProfanityFilterMode', 'model/PunctuationMode'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./DiarizationProperties'), require('./EntityError'), require('./LanguageIdentificationProperties'), require('./ProfanityFilterMode'), require('./PunctuationMode'));
  } else {
    // Browser globals (root is window)
    if (!root.SpeechServicesApiVersion20241115) {
      root.SpeechServicesApiVersion20241115 = {};
    }
    root.SpeechServicesApiVersion20241115.TranscriptionProperties = factory(root.SpeechServicesApiVersion20241115.ApiClient, root.SpeechServicesApiVersion20241115.DiarizationProperties, root.SpeechServicesApiVersion20241115.EntityError, root.SpeechServicesApiVersion20241115.LanguageIdentificationProperties, root.SpeechServicesApiVersion20241115.ProfanityFilterMode, root.SpeechServicesApiVersion20241115.PunctuationMode);
  }
}(this, function(ApiClient, DiarizationProperties, EntityError, LanguageIdentificationProperties, ProfanityFilterMode, PunctuationMode) {
  'use strict';

  /**
   * The TranscriptionProperties model module.
   * @module model/TranscriptionProperties
   * @version 2024-11-15
   */

  /**
   * Constructs a new <code>TranscriptionProperties</code>.
   * @alias module:model/TranscriptionProperties
   * @class
   * @param timeToLiveHours {Number} How long the transcription will be kept in the system after it has completed. Once the transcription reaches the time to live after completion(successful or failed) it will be automatically deleted.  Note: When using BYOS (bring your own storage), the result files on the customer owned storage account will also be deleted.Use either destinationContainerUrl to specify a separate container for result files which will not be deleted when the timeToLive expires, or retrieve the result files through the API and store them as needed.  The shortest supported duration is 6 hours, the longest supported duration is 31 days. 2 days (48 hours) is the recommended default value when data is consumed directly.
   */
  var exports = function(timeToLiveHours) {
    this.timeToLiveHours = timeToLiveHours;
  };

  /**
   * Constructs a <code>TranscriptionProperties</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TranscriptionProperties} obj Optional instance to populate.
   * @return {module:model/TranscriptionProperties} The populated <code>TranscriptionProperties</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('wordLevelTimestampsEnabled'))
        obj.wordLevelTimestampsEnabled = ApiClient.convertToType(data['wordLevelTimestampsEnabled'], 'Boolean');
      if (data.hasOwnProperty('displayFormWordLevelTimestampsEnabled'))
        obj.displayFormWordLevelTimestampsEnabled = ApiClient.convertToType(data['displayFormWordLevelTimestampsEnabled'], 'Boolean');
      if (data.hasOwnProperty('channels'))
        obj.channels = ApiClient.convertToType(data['channels'], ['Number']);
      if (data.hasOwnProperty('punctuationMode'))
        obj.punctuationMode = PunctuationMode.constructFromObject(data['punctuationMode']);
      if (data.hasOwnProperty('profanityFilterMode'))
        obj.profanityFilterMode = ProfanityFilterMode.constructFromObject(data['profanityFilterMode']);
      if (data.hasOwnProperty('destinationContainerUrl'))
        obj.destinationContainerUrl = ApiClient.convertToType(data['destinationContainerUrl'], 'String');
      if (data.hasOwnProperty('timeToLiveHours'))
        obj.timeToLiveHours = ApiClient.convertToType(data['timeToLiveHours'], 'Number');
      if (data.hasOwnProperty('languageIdentification'))
        obj.languageIdentification = LanguageIdentificationProperties.constructFromObject(data['languageIdentification']);
      if (data.hasOwnProperty('diarization'))
        obj.diarization = DiarizationProperties.constructFromObject(data['diarization']);
      if (data.hasOwnProperty('error'))
        obj.error = EntityError.constructFromObject(data['error']);
      if (data.hasOwnProperty('durationMilliseconds'))
        obj.durationMilliseconds = ApiClient.convertToType(data['durationMilliseconds'], 'Number');
    }
    return obj;
  }

  /**
   * A value indicating whether word level timestamps are requested. The default value is `false`.
   * @member {Boolean} wordLevelTimestampsEnabled
   */
  exports.prototype.wordLevelTimestampsEnabled = undefined;

  /**
   * A value indicating whether word level timestamps for the display form are requested. The default value is `false`.
   * @member {Boolean} displayFormWordLevelTimestampsEnabled
   */
  exports.prototype.displayFormWordLevelTimestampsEnabled = undefined;

  /**
   * A collection of the requested channel numbers. In the default case, the channels 0 and 1 are considered.
   * @member {Array.<Number>} channels
   */
  exports.prototype.channels = undefined;

  /**
   * @member {module:model/PunctuationMode} punctuationMode
   */
  exports.prototype.punctuationMode = undefined;

  /**
   * @member {module:model/ProfanityFilterMode} profanityFilterMode
   */
  exports.prototype.profanityFilterMode = undefined;

  /**
   * The requested destination container. ### Remarks ### When a destination container is used in combination with a `timeToLive`, the metadata of a transcription will be deleted normally, but the data stored in the destination container, including transcription results, will remain untouched, because no delete permissions are required for this container.  To support automatic cleanup, either configure blob lifetimes on the container, or use \"Bring your own Storage (BYOS)\" instead of `destinationContainerUrl`, where blobs can be cleaned up.
   * @member {String} destinationContainerUrl
   */
  exports.prototype.destinationContainerUrl = undefined;

  /**
   * How long the transcription will be kept in the system after it has completed. Once the transcription reaches the time to live after completion(successful or failed) it will be automatically deleted.  Note: When using BYOS (bring your own storage), the result files on the customer owned storage account will also be deleted.Use either destinationContainerUrl to specify a separate container for result files which will not be deleted when the timeToLive expires, or retrieve the result files through the API and store them as needed.  The shortest supported duration is 6 hours, the longest supported duration is 31 days. 2 days (48 hours) is the recommended default value when data is consumed directly.
   * @member {Number} timeToLiveHours
   */
  exports.prototype.timeToLiveHours = undefined;

  /**
   * @member {module:model/LanguageIdentificationProperties} languageIdentification
   */
  exports.prototype.languageIdentification = undefined;

  /**
   * @member {module:model/DiarizationProperties} diarization
   */
  exports.prototype.diarization = undefined;

  /**
   * @member {module:model/EntityError} error
   */
  exports.prototype.error = undefined;

  /**
   * The duration in milliseconds of the transcription. Durations larger than 2^53-1 are not supported to ensure compatibility with JavaScript integers.
   * @member {Number} durationMilliseconds
   * @default 0
   */
  exports.prototype.durationMilliseconds = 0;


  return exports;

}));
